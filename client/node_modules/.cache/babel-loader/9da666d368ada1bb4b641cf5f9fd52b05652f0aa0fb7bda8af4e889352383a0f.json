{"ast":null,"code":"var _jsxFileName = \"/Users/avanishkumarsingh/Desktop/portfolio/Stack-overflow/client/src/pages/Questions/DisplayAnswer.jsx\",\n  _s = $RefreshSig$();\n// import React from 'react'\n// import QuestionDetails from './QuestionDetails'\n// import { Link,useParams } from 'react-router-dom'\n// import moment from 'moment'\n// import Avtar from \"../../components/Avtar/Avtar\"\n// import { useSelector,useDispatch } from 'react-redux'\n// import { deleteAnswer } from \"../../actions/question\"\n\n// const DisplayAnswer = ({question,handleShare}) => {\n//     const User = useSelector((state)=>(state.currentUserReducer));\n//     const { id } = useParams();\n//   const dispatch = useDispatch();\n//     const handleDelete = (answerId, noOfAnswers) => {\n//         dispatch(deleteAnswer(id, answerId, noOfAnswers - 1));\n//       };\n\n//   return (\n//     <div>\n//     {\n//         question.answer.map((ans)=>(\n//             <div className='display-ans' key={ans._id}>\n//                 <p>{ans.answerBody}</p>\n//                 <div className='question-actions-user'>\n//                 <button type='button' onClick={handleShare}>Share</button>\n\n//                 {\n//                     User?.result?._id ===ans?.userId  && (\n//                         <button type='button' onClick={()=>handleDelete(ans._id,question.noOfAnswers)}> Delete</button>\n//                     )\n//                 }\n\n//                 </div>\n//                 <div> \n//                 <p>answered {moment(ans.answeredOn).fromNow}</p>\n//                 <Link to={`/Users/${ans.userId}`} className='userlink' style={{color:'#00868'}}>\n//                                     <Avtar backgroundColor='green' style={{padding:'2px 1px 2px 1px'}} >{ans.userAnswered.charAt(0).toUpperCase()} </Avtar>\n//                                     <div>\n//                                         {ans.userAnswered}\n//                                     </div>\n//                                 </Link>\n//                 </div>\n//             </div>\n//         ))\n//     }\n\n//     </div>\n//   )\n// }\n\n// export default DisplayAnswer\nimport React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport Avtar from '../../components/Avtar/Avtar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteAnswer } from '../../actions/question';\nimport './Questions.css'; // Import the CSS file for questions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayAnswer = ({\n  question,\n  handleShare\n}) => {\n  _s();\n  const User = useSelector(state => state.currentUserReducer);\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const handleDelete = (answerId, noOfAnswers) => {\n    dispatch(deleteAnswer(id, answerId, noOfAnswers - 1));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: question.answer.map(ans => {\n      var _User$result;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-details\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ans.answerBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-actions-user\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleShare,\n            children: \"Share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), (User === null || User === void 0 ? void 0 : (_User$result = User.result) === null || _User$result === void 0 ? void 0 : _User$result._id) === (ans === null || ans === void 0 ? void 0 : ans.userId) && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleDelete(ans._id, question.noOfAnswers),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"answered \", moment(ans.answeredOn).fromNow]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/Users/${ans.userId}`,\n            className: \"userlink\",\n            style: {\n              color: '#00868'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avtar, {\n              backgroundColor: \"green\",\n              px: \"8px\",\n              py: \"5px\",\n              borderRadius: \"4px\",\n              children: ans.userAnswered.charAt(0).toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: ans.userAnswered\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, ans._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(DisplayAnswer, \"zE/baFucSophsfxzawraV8eZ2Cg=\", false, function () {\n  return [useSelector, useParams, useDispatch];\n});\n_c = DisplayAnswer;\nexport default DisplayAnswer;\nvar _c;\n$RefreshReg$(_c, \"DisplayAnswer\");","map":{"version":3,"names":["React","Link","useParams","moment","Avtar","useSelector","useDispatch","deleteAnswer","jsxDEV","_jsxDEV","DisplayAnswer","question","handleShare","_s","User","state","currentUserReducer","id","dispatch","handleDelete","answerId","noOfAnswers","children","answer","map","ans","_User$result","className","answerBody","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","result","_id","userId","answeredOn","fromNow","to","style","color","backgroundColor","px","py","borderRadius","userAnswered","charAt","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/avanishkumarsingh/Desktop/portfolio/Stack-overflow/client/src/pages/Questions/DisplayAnswer.jsx"],"sourcesContent":["// import React from 'react'\n// import QuestionDetails from './QuestionDetails'\n// import { Link,useParams } from 'react-router-dom'\n// import moment from 'moment'\n// import Avtar from \"../../components/Avtar/Avtar\"\n// import { useSelector,useDispatch } from 'react-redux'\n// import { deleteAnswer } from \"../../actions/question\"\n\n\n// const DisplayAnswer = ({question,handleShare}) => {\n//     const User = useSelector((state)=>(state.currentUserReducer));\n//     const { id } = useParams();\n//   const dispatch = useDispatch();\n//     const handleDelete = (answerId, noOfAnswers) => {\n//         dispatch(deleteAnswer(id, answerId, noOfAnswers - 1));\n//       };\n\n//   return (\n//     <div>\n//     {\n//         question.answer.map((ans)=>(\n//             <div className='display-ans' key={ans._id}>\n//                 <p>{ans.answerBody}</p>\n//                 <div className='question-actions-user'>\n//                 <button type='button' onClick={handleShare}>Share</button>\n\n//                 {\n//                     User?.result?._id ===ans?.userId  && (\n//                         <button type='button' onClick={()=>handleDelete(ans._id,question.noOfAnswers)}> Delete</button>\n//                     )\n//                 }\n\n//                 </div>\n//                 <div> \n//                 <p>answered {moment(ans.answeredOn).fromNow}</p>\n//                 <Link to={`/Users/${ans.userId}`} className='userlink' style={{color:'#00868'}}>\n//                                     <Avtar backgroundColor='green' style={{padding:'2px 1px 2px 1px'}} >{ans.userAnswered.charAt(0).toUpperCase()} </Avtar>\n//                                     <div>\n//                                         {ans.userAnswered}\n//                                     </div>\n//                                 </Link>\n//                 </div>\n//             </div>\n//         ))\n//     }\n      \n//     </div>\n//   )\n// }\n\n// export default DisplayAnswer\nimport React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport Avtar from '../../components/Avtar/Avtar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteAnswer } from '../../actions/question';\nimport './Questions.css'; // Import the CSS file for questions\n\nconst DisplayAnswer = ({ question, handleShare }) => {\n  const User = useSelector((state) => state.currentUserReducer);\n  const { id } = useParams();\n  const dispatch = useDispatch();\n\n  const handleDelete = (answerId, noOfAnswers) => {\n    dispatch(deleteAnswer(id, answerId, noOfAnswers - 1));\n  };\n\n  return (\n    <div>\n      {question.answer.map((ans) => (\n        <div className='question-details' key={ans._id}> {/* Apply the same CSS class as used for questions */}\n          <p>{ans.answerBody}</p>\n          <div className='question-actions-user'>\n            <button type='button' onClick={handleShare}>Share</button>\n            {User?.result?._id === ans?.userId && (\n              <button type='button' onClick={() => handleDelete(ans._id, question.noOfAnswers)}>Delete</button>\n            )}\n          </div>\n          <div>\n            <p>answered {moment(ans.answeredOn).fromNow}</p>\n            <Link to={`/Users/${ans.userId}`} className='userlink' style={{ color: '#00868' }}>\n              <Avtar backgroundColor='green' px='8px' py='5px' borderRadius='4px'>\n                {ans.userAnswered.charAt(0).toUpperCase()}\n              </Avtar>\n              <div>{ans.userAnswered}</div>\n            </Link>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default DisplayAnswer;\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,KAAK,MAAM,8BAA8B;AAChD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,wBAAwB;AACrD,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAMC,IAAI,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,kBAAkB,CAAC;EAC7D,MAAM;IAAEC;EAAG,CAAC,GAAGf,SAAS,CAAC,CAAC;EAC1B,MAAMgB,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,YAAY,GAAGA,CAACC,QAAQ,EAAEC,WAAW,KAAK;IAC9CH,QAAQ,CAACX,YAAY,CAACU,EAAE,EAAEG,QAAQ,EAAEC,WAAW,GAAG,CAAC,CAAC,CAAC;EACvD,CAAC;EAED,oBACEZ,OAAA;IAAAa,QAAA,EACGX,QAAQ,CAACY,MAAM,CAACC,GAAG,CAAEC,GAAG;MAAA,IAAAC,YAAA;MAAA,oBACvBjB,OAAA;QAAKkB,SAAS,EAAC,kBAAkB;QAAAL,QAAA,GAAe,GAAC,eAC/Cb,OAAA;UAAAa,QAAA,EAAIG,GAAG,CAACG;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBvB,OAAA;UAAKkB,SAAS,EAAC,uBAAuB;UAAAL,QAAA,gBACpCb,OAAA;YAAQwB,IAAI,EAAC,QAAQ;YAACC,OAAO,EAAEtB,WAAY;YAAAU,QAAA,EAAC;UAAK;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACzD,CAAAlB,IAAI,aAAJA,IAAI,wBAAAY,YAAA,GAAJZ,IAAI,CAAEqB,MAAM,cAAAT,YAAA,uBAAZA,YAAA,CAAcU,GAAG,OAAKX,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEY,MAAM,kBAChC5B,OAAA;YAAQwB,IAAI,EAAC,QAAQ;YAACC,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAACM,GAAG,CAACW,GAAG,EAAEzB,QAAQ,CAACU,WAAW,CAAE;YAAAC,QAAA,EAAC;UAAM;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACjG;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACNvB,OAAA;UAAAa,QAAA,gBACEb,OAAA;YAAAa,QAAA,GAAG,WAAS,EAACnB,MAAM,CAACsB,GAAG,CAACa,UAAU,CAAC,CAACC,OAAO;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChDvB,OAAA,CAACR,IAAI;YAACuC,EAAE,EAAG,UAASf,GAAG,CAACY,MAAO,EAAE;YAACV,SAAS,EAAC,UAAU;YAACc,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAS,CAAE;YAAApB,QAAA,gBAChFb,OAAA,CAACL,KAAK;cAACuC,eAAe,EAAC,OAAO;cAACC,EAAE,EAAC,KAAK;cAACC,EAAE,EAAC,KAAK;cAACC,YAAY,EAAC,KAAK;cAAAxB,QAAA,EAChEG,GAAG,CAACsB,YAAY,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC;YAAC;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC,eACRvB,OAAA;cAAAa,QAAA,EAAMG,GAAG,CAACsB;YAAY;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA,GAhB+BP,GAAG,CAACW,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBzC,CAAC;IAAA,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,EAAA,CAjCIH,aAAa;EAAA,QACJL,WAAW,EACTH,SAAS,EACPI,WAAW;AAAA;AAAA4C,EAAA,GAHxBxC,aAAa;AAmCnB,eAAeA,aAAa;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}