{"ast":null,"code":"var _jsxFileName = \"/Users/avanishkumarsingh/Desktop/portfolio/Stack-overflow/client/src/pages/Forgot-password/ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"../../config/axiosConfig\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../Auth/Auth.css\";\nimport icon from \"../../assets/icon.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      newPassword: \"\",\n      confirmPassword: \"\"\n    },\n    validationSchema: Yup.object({\n      newPassword: Yup.string().required(\"Required\").min(6, \"Too Short!\"),\n      confirmPassword: Yup.string().oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\").required(\"Required\")\n    }),\n    onSubmit: values => {\n      const {\n        newPassword\n      } = values;\n      const token = window.location.pathname.split(\"/\").pop();\n      axios.post(`/user/reset-password/${token}`, {\n        newPassword\n      }).then(response => {\n        toast.success(response.data.message);\n        setTimeout(() => {\n          window.location.href = \"/Auth\";\n        }, 3000);\n      }).catch(error => {\n        toast.error(\"Your link has expired\");\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"auth-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: icon,\n        alt: \"stack overflow\",\n        className: \"login-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPassword\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"newPassword\",\n              name: \"newPassword\",\n              type: \"password\",\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              value: formik.values.newPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this), formik.touched.newPassword && formik.errors.newPassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: formik.errors.newPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            type: \"password\",\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            value: formik.values.confirmPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), formik.touched.confirmPassword && formik.errors.confirmPassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: formik.errors.confirmPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"auth-btn\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useFormik","Yup","axios","toast","icon","jsxDEV","_jsxDEV","ResetPassword","_s","formik","initialValues","newPassword","confirmPassword","validationSchema","object","string","required","min","oneOf","ref","onSubmit","values","token","window","location","pathname","split","pop","post","then","response","success","data","message","setTimeout","href","catch","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","htmlFor","id","name","type","onChange","handleChange","onBlur","handleBlur","value","touched","errors","_c","$RefreshReg$"],"sources":["/Users/avanishkumarsingh/Desktop/portfolio/Stack-overflow/client/src/pages/Forgot-password/ResetPassword.jsx"],"sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"../../config/axiosConfig\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../Auth/Auth.css\"\nimport icon from \"../../assets/icon.png\";\n\nconst ResetPassword = () => {\n  const formik = useFormik({\n    initialValues: {\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n    validationSchema: Yup.object({\n      newPassword: Yup.string().required(\"Required\").min(6, \"Too Short!\"),\n      confirmPassword: Yup.string()\n        .oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\")\n        .required(\"Required\"),\n    }),\n    onSubmit: (values) => {\n      const { newPassword } = values;\n      const token = window.location.pathname.split(\"/\").pop();\n\n      axios\n        .post(`/user/reset-password/${token}`, { newPassword })\n        .then((response) => {\n          toast.success(response.data.message);\n          setTimeout(() => {\n            window.location.href = \"/Auth\";\n          }, 3000);\n        })\n        .catch((error) => {\n          toast.error(\"Your link has expired\");\n        });\n    },\n  });\n\n  return (\n    <section className=\"auth-section\">\n\n   \n    <div className=\"auth-container-2\">\n    <img src={icon} alt=\"stack overflow\" className=\"login-logo\" />\n      <h2>Reset Password</h2>\n      <form onSubmit={formik.handleSubmit}>\n        <div>\n          <label htmlFor=\"newPassword\">\n          <h4>New Password</h4>\n          <input\n            id=\"newPassword\"\n            name=\"newPassword\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.newPassword}\n          />\n          </label>\n         \n          {formik.touched.newPassword && formik.errors.newPassword ? (\n            <div>{formik.errors.newPassword}</div>\n          ) : null}\n        </div>\n        <div>\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\n          <input\n            id=\"confirmPassword\"\n            name=\"confirmPassword\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.confirmPassword}\n          />\n          {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\n            <div>{formik.errors.confirmPassword}</div>\n          ) : null}\n        </div>\n        \n          <button className=\"auth-btn\" type=\"submit\">Submit</button>\n       \n      </form>\n    </div>\n    </section>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}