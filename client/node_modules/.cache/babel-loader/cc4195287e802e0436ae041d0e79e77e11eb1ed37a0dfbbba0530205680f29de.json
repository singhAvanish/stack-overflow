{"ast":null,"code":"var _jsxFileName = \"/Users/avanishkumarsingh/Desktop/portfolio/Stack-overflow/client/src/pages/Forgot-password/FotgotPassword.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from '../../config/axiosConfig';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      email: \"\"\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\")\n    }),\n    onSubmit: values => {\n      axios.post(\"user/forgetPassword\", values).then(response => {\n        toast.success(\"Email sent successfully\");\n      }).catch(error => {\n        if (error.response) {\n          if (error.response.status === 404) {\n            toast.error(\"Email not found\");\n          } else {\n            toast.error(\"Server error\");\n          }\n        } else {\n          toast.error(\"Network error\");\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          name: \"email\",\n          type: \"email\",\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          value: formik.values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useFormik","Yup","axios","toast","jsxDEV","_jsxDEV","ForgotPassword","_s","formik","initialValues","email","validationSchema","object","string","required","onSubmit","values","post","then","response","success","catch","error","status","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","htmlFor","id","name","type","onChange","handleChange","onBlur","handleBlur","value","touched","errors","_c","$RefreshReg$"],"sources":["/Users/avanishkumarsingh/Desktop/portfolio/Stack-overflow/client/src/pages/Forgot-password/FotgotPassword.jsx"],"sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from '../../config/axiosConfig';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst ForgotPassword = () => {\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n    }),\n    onSubmit: (values) => {\n      axios\n        .post(\"user/forgetPassword\", values)\n        .then((response) => {\n          toast.success(\"Email sent successfully\");\n        })\n        .catch((error) => {\n          if (error.response) {\n            if (error.response.status === 404) {\n              toast.error(\"Email not found\");\n            } else {\n              toast.error(\"Server error\");\n            }\n          } else {\n            toast.error(\"Network error\");\n          }\n        });\n    },\n  });\n\n  return (\n    <div>\n      <h2>Forgot Password</h2>\n      <form onSubmit={formik.handleSubmit}>\n        <div>\n          <label htmlFor=\"email\">Email Address</label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n          {formik.touched.email && formik.errors.email ? (\n            <div>{formik.errors.email}</div>\n          ) : null}\n        </div>\n        <div>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}