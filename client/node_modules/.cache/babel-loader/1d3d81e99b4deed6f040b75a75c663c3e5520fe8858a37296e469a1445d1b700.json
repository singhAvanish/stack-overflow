{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:4000'\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem(\"Profile\")) {\n    req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem(\"Profile\")).token}`;\n  }\n  return req;\n});\nexport const logIn = authData => API.post('/user/login', authData);\nexport const signUp = authData => API.post('/user/signup', authData);\nexport const postQuestion = questionData => API.post('/questions/Ask', questionData);\nexport const getAllQuestions = () => API.get('/Questions/get');\nexport const deleteQuestion = id => API.delete(`/questions/delete/${id}`);\nexport const postAnswer = (id, noOfAnswers, answerBody, userAnswered, userId) => API.patch(`/answer/post/${id}`, {\n  noOfAnswers,\n  answerBody,\n  userAnswered,\n  userId\n});\nexport const deleteAnswer = (id, answerId, noOfAnswers) => API.patch(`/answer/delete/${id}`, {\n  id,\n  answerId,\n  noOfAnswers\n});\nexport const voteQuestion = (id, value) => API.patch(`/questions/vote/${id}`, {\n  value\n});\nexport const getAllUsers = () => API.get(\"/user/getAllUsers\");","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","authorization","JSON","parse","token","logIn","authData","post","signUp","postQuestion","questionData","getAllQuestions","get","deleteQuestion","id","delete","postAnswer","noOfAnswers","answerBody","userAnswered","userId","patch","deleteAnswer","answerId","voteQuestion","value","getAllUsers"],"sources":["/Users/avanishkumarsingh/Desktop/portfolio/Stack-overflow/client/src/api/index.js"],"sourcesContent":["import axios from 'axios'\nconst API=axios.create({baseURL:'http://localhost:4000'})\nAPI.interceptors.request.use((req) => {\n    if (localStorage.getItem(\"Profile\")) {\n      req.headers.authorization = `Bearer ${\n        JSON.parse(localStorage.getItem(\"Profile\")).token\n      }`;\n    }\n    return req;\n  });\nexport const logIn =(authData)=>API.post('/user/login',authData)\nexport const signUp =(authData)=>API.post('/user/signup',authData)\nexport const postQuestion =(questionData)=>API.post('/questions/Ask',questionData)\nexport const getAllQuestions=()=>API.get('/Questions/get')\nexport const deleteQuestion=(id)=>API.delete(`/questions/delete/${id}`)\nexport const postAnswer =(id,noOfAnswers,answerBody,userAnswered,userId)=>API.patch(`/answer/post/${id}`,{noOfAnswers,answerBody,userAnswered,userId})\nexport const deleteAnswer =(id,answerId,noOfAnswers)=>API.patch(`/answer/delete/${id}`,{id,answerId,noOfAnswers})\nexport const voteQuestion = (id, value) =>API.patch(`/questions/vote/${id}`, { value });\nexport const getAllUsers = () => API.get(\"/user/getAllUsers\");\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,GAAG,GAACD,KAAK,CAACE,MAAM,CAAC;EAACC,OAAO,EAAC;AAAuB,CAAC,CAAC;AACzDF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EAClC,IAAIC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,EAAE;IACnCF,GAAG,CAACG,OAAO,CAACC,aAAa,GAAI,UAC3BC,IAAI,CAACC,KAAK,CAACL,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAACK,KAC7C,EAAC;EACJ;EACA,OAAOP,GAAG;AACZ,CAAC,CAAC;AACJ,OAAO,MAAMQ,KAAK,GAAGC,QAAQ,IAAGf,GAAG,CAACgB,IAAI,CAAC,aAAa,EAACD,QAAQ,CAAC;AAChE,OAAO,MAAME,MAAM,GAAGF,QAAQ,IAAGf,GAAG,CAACgB,IAAI,CAAC,cAAc,EAACD,QAAQ,CAAC;AAClE,OAAO,MAAMG,YAAY,GAAGC,YAAY,IAAGnB,GAAG,CAACgB,IAAI,CAAC,gBAAgB,EAACG,YAAY,CAAC;AAClF,OAAO,MAAMC,eAAe,GAACA,CAAA,KAAIpB,GAAG,CAACqB,GAAG,CAAC,gBAAgB,CAAC;AAC1D,OAAO,MAAMC,cAAc,GAAEC,EAAE,IAAGvB,GAAG,CAACwB,MAAM,CAAE,qBAAoBD,EAAG,EAAC,CAAC;AACvE,OAAO,MAAME,UAAU,GAAEA,CAACF,EAAE,EAACG,WAAW,EAACC,UAAU,EAACC,YAAY,EAACC,MAAM,KAAG7B,GAAG,CAAC8B,KAAK,CAAE,gBAAeP,EAAG,EAAC,EAAC;EAACG,WAAW;EAACC,UAAU;EAACC,YAAY;EAACC;AAAM,CAAC,CAAC;AACtJ,OAAO,MAAME,YAAY,GAAEA,CAACR,EAAE,EAACS,QAAQ,EAACN,WAAW,KAAG1B,GAAG,CAAC8B,KAAK,CAAE,kBAAiBP,EAAG,EAAC,EAAC;EAACA,EAAE;EAACS,QAAQ;EAACN;AAAW,CAAC,CAAC;AACjH,OAAO,MAAMO,YAAY,GAAGA,CAACV,EAAE,EAAEW,KAAK,KAAIlC,GAAG,CAAC8B,KAAK,CAAE,mBAAkBP,EAAG,EAAC,EAAE;EAAEW;AAAM,CAAC,CAAC;AACvF,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAMnC,GAAG,CAACqB,GAAG,CAAC,mBAAmB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}